// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

enum ChallengeType {
  SELECT
  ASSIST
}

model Courses {
  id       String @id @default(cuid())
  title    String
  imageSrc String

  userProgress UserProgress[]
  units        Units[]
}

model Units {
  id          String @id @default(cuid())
  title       String
  description String
  order Int

  courseId String
  course   Courses @relation(fields: [courseId], references: [id], onDelete: Cascade)

  lessons Lessons[]
}

model Lessons {
  id    String @id @default(cuid())
  title String
  order Int

  unitId String
  unit   Units  @relation(fields: [unitId], references: [id], onDelete: Cascade)

  challenges Challenges[]
}

model Challenges {
  id       String        @id @default(cuid())
  type     ChallengeType
  question String
  order    Int

  lessonId String
  lesson   Lessons @relation(fields: [lessonId], references: [id], onDelete: Cascade)

  challengeOptions  ChallengeOptions[]
  challengeProgress ChallengeProgress[]
}

model ChallengeOptions {
  id       String  @id @default(cuid())
  text     String
  correct  Boolean
  imageSrc String?
  audioSrc String?

  challengeId String
  challenge   Challenges @relation(fields: [challengeId], references: [id], onDelete: Cascade)
}

model ChallengeProgress {
  id        String  @id @default(cuid())
  userId    String
  completed Boolean

  challengeId String
  challenge   Challenges @relation(fields: [challengeId], references: [id], onDelete: Cascade)
}

model UserProgress {
  userId     String @id
  userName   String @default("User")
  userAvatar String @default("/icons/avatar1.svg")
  hearts     Int    @default(5)
  points     Int    @default(0)

  activeCourseId String
  activeCourse   Courses @relation(fields: [activeCourseId], references: [id], onDelete: Cascade)

  @@index([activeCourseId])
}
